{"version":3,"sources":["utils/fetchClient.ts","types/Todo.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Auth/TodoItem.tsx","components/Auth/TodoList.tsx","components/Auth/TodoFooter.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","FilterType","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","TodoItem","props","todo","handleDeleteTodo","handleUpdateTodo","isLoading","selectedId","toggleLoader","isDoubleClicked","setIsDoubleClicked","title","updatedTitle","setUpdatedTitle","newTodoField","useRef","current","focus","handleTitleChange","data-cy","cn","completed","checked","ref","onBlur","onKeyDown","key","onDoubleClick","onClick","TodoList","todos","map","TodoFooter","setFilteredTodos","completedTodos","filter","el","length","href","ALL","ACTIVE","COMPLETED","forEach","App","setTodos","todoTitle","setTodoTitle","setIsLoading","isError","setIsError","isAddingError","setIsAddingError","isDeletingError","setIsDeletingAddingError","isUpdatingError","setIsUpdatingError","emptyQueryError","setEmptyQueryError","filteredTodos","toggleAll","setToggleAll","setToggleLoader","setSelectedId","useContext","userId","handleAddTodo","newTodo","prev","catch","finally","todoId","removeTodo","updatedTodo","updateTodo","visibleTodos","active","every","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1efddc4a.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: {}) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: {}) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","/* eslint-disable no-shadow */\nexport interface Todo {\n  id: number;\n  userId: number;\n  title: string;\n  completed: boolean;\n}\n\nexport enum FilterType {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n\nexport type TodoFragment = Pick<Todo, 'userId' | 'title' | 'completed'>;\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  handleDeleteTodo: (todoId: number) => void;\n  handleUpdateTodo: (todoId: number, data: Partial<Todo>) => void;\n  isLoading: boolean;\n  selectedId: number;\n  toggleLoader: boolean;\n}\n\nexport const TodoItem: React.FC<Props> = (props) => {\n  const {\n    todo,\n    handleDeleteTodo,\n    handleUpdateTodo,\n    isLoading,\n    selectedId,\n    toggleLoader,\n  } = props;\n\n  const [isDoubleClicked, setIsDoubleClicked] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(todo.title);\n\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, [isDoubleClicked]);\n\n  const handleTitleChange = () => {\n    setIsDoubleClicked(false);\n\n    if (updatedTitle === '') {\n      handleDeleteTodo(todo.id);\n    }\n\n    handleUpdateTodo(todo.id, { title: updatedTitle });\n  };\n\n  return (\n    <>\n      <div\n        data-cy=\"Todo\"\n        className={cn('todo',\n          { completed: todo.completed })}\n      >\n        <label className=\"todo__status-label\">\n          <input\n            data-cy=\"TodoStatus\"\n            type=\"checkbox\"\n            className=\"todo__status\"\n            checked={todo.completed}\n            onChange={() => {\n              handleUpdateTodo(todo.id, { completed: !todo.completed });\n            }}\n          />\n        </label>\n\n        {isDoubleClicked\n          ? (\n            <form onSubmit={(event) => {\n              event.preventDefault();\n              handleTitleChange();\n            }}\n            >\n              <input\n                data-cy=\"TodoTitleField\"\n                value={updatedTitle}\n                type=\"text\"\n                ref={newTodoField}\n                placeholder=\"Empty todo will be deleted\"\n                className=\"todo__title-field\"\n                onChange={event => setUpdatedTitle(event.target.value)}\n                onBlur={(event) => {\n                  event.preventDefault();\n                  handleTitleChange();\n                }}\n                onKeyDown={(event) => {\n                  if (event.key === 'Escape') {\n                    setIsDoubleClicked(false);\n                  }\n                }}\n              />\n            </form>\n          )\n          : (\n            <>\n              <span\n                data-cy=\"TodoTitle\"\n                className=\"todo__title\"\n                onDoubleClick={() => {\n                  setIsDoubleClicked(true);\n                  setUpdatedTitle(todo.title);\n                }}\n                onBlur={() => setIsDoubleClicked(false)}\n              >\n                {todo.title}\n              </span>\n              <button\n                type=\"button\"\n                className=\"todo__remove\"\n                data-cy=\"TodoDeleteButton\"\n                onClick={() => {\n                  handleDeleteTodo(todo.id);\n                }}\n              >\n                ×\n              </button>\n\n              {\n                selectedId === todo.id && (\n                  <div\n                    data-cy=\"TodoLoader\"\n                    className={cn('modal overlay',\n                      { 'is-active': isLoading })}\n                  >\n                    <div\n                      className=\"modal-background has-background-white-ter\"\n                    />\n                    <div className=\"loader\" />\n                  </div>\n                )\n              }\n\n            </>\n          )}\n\n        {toggleLoader && (\n          <div\n            data-cy=\"TodoLoader\"\n            className={cn('modal overlay',\n              { 'is-active': isLoading })}\n          >\n            <div className=\"modal-background has-background-white-ter\" />\n            <div className=\"loader\" />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from './TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  isLoading: boolean;\n  handleDeleteTodo: (todoId: number) => void;\n  handleUpdateTodo: (todoId: number, data: Partial<Todo>) => void;\n  selectedId: number;\n  toggleLoader: boolean;\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    handleDeleteTodo,\n    handleUpdateTodo,\n    isLoading,\n    selectedId,\n    toggleLoader,\n  } = props;\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleDeleteTodo={handleDeleteTodo}\n          handleUpdateTodo={handleUpdateTodo}\n          isLoading={isLoading}\n          selectedId={selectedId}\n          toggleLoader={toggleLoader}\n        />\n      ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport { FilterType, Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setFilteredTodos: (filterType: FilterType) => void,\n  handleDeleteTodo: (todoId: number) => void;\n}\n\nexport const TodoFooter: React.FC<Props> = (props) => {\n  const { todos, setFilteredTodos, handleDeleteTodo } = props;\n\n  const handleClear = () => {\n    todos.forEach(el => {\n      if (el.completed === true) {\n        handleDeleteTodo(el.id);\n      }\n    });\n  };\n\n  const completedTodos = todos.filter(el => el.completed === true);\n\n  return (\n\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {todos.length - completedTodos.length}\n        {' '}\n        items left\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className=\"filter__link selected\"\n          onClick={() => setFilteredTodos(FilterType.ALL)}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className=\"filter__link\"\n          onClick={() => setFilteredTodos(FilterType.ACTIVE)}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className=\"filter__link\"\n          onClick={() => setFilteredTodos(FilterType.COMPLETED)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={() => handleClear()}\n      >\n        {completedTodos.length !== 0 && 'Clear completed'}\n      </button>\n\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport cn from 'classnames';\nimport {\n  addTodo, getTodos, removeTodo, updateTodo,\n} from './api/todos';\n\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { TodoList } from './components/Auth/TodoList';\nimport { FilterType, Todo } from './types/Todo';\nimport { TodoFooter } from './components/Auth/TodoFooter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isAddingError, setIsAddingError] = useState(false);\n  const [isDeletingError, setIsDeletingAddingError] = useState(false);\n  const [isUpdatingError, setIsUpdatingError] = useState(false);\n  const [emptyQueryError, setEmptyQueryError] = useState(false);\n  const [\n    filteredTodos,\n    setFilteredTodos,\n  ] = useState(FilterType.ALL);\n  const [toggleAll, setToggleAll] = useState(true);\n  const [toggleLoader, setToggleLoader] = useState(false);\n  const [selectedId, setSelectedId] = useState(0);\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const user = useContext(AuthContext);\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      getTodos(user.id)\n        .then(setTodos);\n    }\n  }, []);\n\n  if (isError) {\n    setTimeout(() => {\n      setIsError(false);\n    }, 3000);\n  }\n\n  const handleAddTodo = () => {\n    setToggleLoader(true);\n    setIsLoading(true);\n\n    if (todoTitle === '') {\n      setIsAddingError(false);\n      setIsError(true);\n      setEmptyQueryError(true);\n    }\n\n    if (user && todoTitle !== '') {\n      addTodo({\n        userId: user.id,\n        title: todoTitle,\n        completed: false,\n      })\n        .then((newTodo: Todo) => setTodos((prev) => [...prev, newTodo]))\n        .catch(() => {\n          setIsError(true);\n          setEmptyQueryError(false);\n          setIsUpdatingError(false);\n          setIsDeletingAddingError(false);\n          setIsAddingError(true);\n        })\n        .finally(() => {\n          setTodoTitle('');\n          setIsLoading(false);\n          setToggleLoader(false);\n        });\n    }\n  };\n\n  const handleDeleteTodo = (todoId: number) => {\n    setIsLoading(true);\n    setSelectedId(todoId);\n\n    removeTodo(todoId)\n      .then(() => setTodos((prev: Todo[]) => prev\n        .filter(todo => todo.id !== todoId)))\n      .catch(() => {\n        setIsError(true);\n        setEmptyQueryError(false);\n        setIsAddingError(false);\n        setIsUpdatingError(false);\n        setIsDeletingAddingError(true);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleUpdateTodo = (todoId: number, data: Partial<Todo>) => {\n    setSelectedId(todoId);\n    setIsLoading(true);\n\n    updateTodo(todoId, data)\n      .then(updatedTodo => {\n        setTodos(prev => prev\n          .map(todo => (todo.id === todoId\n            ? updatedTodo\n            : todo)));\n      })\n      .catch(() => {\n        setIsError(true);\n        setEmptyQueryError(false);\n        setIsAddingError(false);\n        setIsDeletingAddingError(false);\n        setIsUpdatingError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setToggleLoader(false);\n      });\n  };\n\n  let visibleTodos = [...todos];\n\n  switch (filteredTodos) {\n    case (FilterType.ACTIVE):\n      visibleTodos = [...todos].filter(el => el.completed === false);\n      break;\n\n    case FilterType.COMPLETED:\n      visibleTodos = [...todos].filter(el => el.completed === true);\n      break;\n\n    default:\n      visibleTodos = [...todos];\n  }\n\n  const handlerToggler = () => {\n    setToggleAll(!toggleAll);\n    setToggleLoader(true);\n\n    return visibleTodos\n      .forEach(el => handleUpdateTodo(el.id, { completed: toggleAll }));\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          {visibleTodos.length > 0 && (\n            <button\n              data-cy=\"ToggleAllButton\"\n              type=\"button\"\n              className={cn(\n                'todoapp__toggle-all',\n                {\n                  active: todos.every(todo => todo.completed),\n                },\n              )}\n              onClick={() => handlerToggler()}\n            />\n          )}\n\n          <form onSubmit={(event) => {\n            event.preventDefault();\n            handleAddTodo();\n          }}\n          >\n            <input\n              value={todoTitle}\n              data-cy=\"NewTodoField\"\n              type=\"text\"\n              ref={newTodoField}\n              className=\"todoapp__new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={event => setTodoTitle(event.target.value)}\n            />\n          </form>\n        </header>\n\n        <TodoList\n          todos={visibleTodos}\n          handleDeleteTodo={handleDeleteTodo}\n          handleUpdateTodo={handleUpdateTodo}\n          isLoading={isLoading}\n          selectedId={selectedId}\n          toggleLoader={toggleLoader}\n        />\n\n        {todos.length > 0 && (\n          <TodoFooter\n            todos={todos}\n            setFilteredTodos={setFilteredTodos}\n            handleDeleteTodo={handleDeleteTodo}\n          />\n        )}\n      </div>\n\n      {isError && (\n        <div\n          data-cy=\"ErrorNotification\"\n          className=\"notification is-danger is-light has-text-weight-normal\"\n        >\n          <button\n            data-cy=\"HideErrorButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setIsError(false)}\n          />\n          {emptyQueryError && 'Title can`t be empty'}\n          {isDeletingError && 'Unable to delete a todo'}\n          {isAddingError && 'Unable to add a todo'}\n          {isUpdatingError && 'Unable to update a todo'}\n        </div>\n      )}\n\n    </div>\n  );\n};\n","import { Todo, TodoFragment } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (newTodo: TodoFragment) => {\n  return client.post<Todo>('/todos', newTodo);\n};\n\nexport const removeTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = (todoId: number, updatedTodo: {}) => {\n  return client.patch<Todo>(`/todos/${todoId}`, updatedTodo);\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root: React.FC = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}